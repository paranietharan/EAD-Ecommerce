#server:
#  port: 8222 # Gateway runs on port 8222
#
#spring:
#  application:
#    name: gateway-service # Name of the service
#
#  cloud:
#    gateway:
#      # CORS configuration
#      globalcors:
#        corsConfigurations:
#          '[/**]': # Apply CORS to all paths
#            allowedOrigins:
#              - "http://localhost:3000" # Frontend origin
#            allowedMethods:
#              - GET
#              - POST
#              - PUT
#              - DELETE
#              - OPTIONS
#              - PATCH
#            allowedHeaders:
#              - "*" # Allow all headers
#            allowCredentials: true # Allow cookies/auth headers
#
#      # Define the routes for microservices
#      routes:
#        # Authentication Service
#        - id: auth-service
#          uri: http://localhost:8090 # Backend auth service
#          predicates:
#            - Path=/api/v1/auth/**,/forgotPassword/**
#
#        # Customer Service
#        - id: customer-service
#          uri: http://localhost:8090 # Backend customer service
#          predicates:
#            - Path=/api/v1/customer/**
#          filters:
#            - AuthenticationFilter
#
#        # Product Service
#        - id: product-service
#          uri: http://localhost:8070 # Backend product service
#          predicates:
#            - Path=/api/v1/products/**,/api/v1/category/**,/api/v1/cart/**,/api/v1/wishlist/**
#          filters:
#            - AuthenticationFilter
#
#        # Order Service
#        - id: order-service
#          uri: http://localhost:7080 # Backend order service
#          predicates:
#            - Path=/api/v1/orders/**
#          filters:
#            - AuthenticationFilter
#
#        # Payment Service
#        - id: payment-service
#          uri: http://localhost:8010 # Backend payment service
#          predicates:
#            - Path=/api/v1/payment/**
#          filters:
#            - AuthenticationFilter
#
## Eureka client configuration
#eureka:
#  client:
#    register-with-eureka: false # Set to true if using Eureka for service discovery
#    fetch-registry: false       # Fetch registry only if needed

server:
  port: 8222 # Gateway runs on port 8222

spring:
  application:
    name: gateway-service # Name of the service

  cloud:
    gateway:
      # CORS configuration
      globalcors:
        corsConfigurations:
          '[/**]': # Apply CORS to all paths
            allowedOrigins:
              - "http://localhost:3000" # Frontend origin
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders:
              - "*" # Allow all headers
            allowCredentials: true # Allow cookies/auth headers

      # Define the routes for microservices
      routes:
        # Authentication Service
        - id: auth-service
          uri: http://localhost:8090 # Backend auth service
          predicates:
            - Path=/api/v1/auth/**,/forgotPassword/**

        # Customer Service
        - id: customer-service
          uri: http://localhost:8090 # Backend customer service
          predicates:
            - Path=/api/v1/customer/**
          filters:
            - AuthenticationFilter

        # Product Service - Specific method and paths with AuthenticationFilter
        - id: product-service-post-put
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/products/**
            - Method=POST,PUT
          filters:
            - AuthenticationFilter

        - id: product-service-delete
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/products/{product-id}
            - Method=DELETE
          filters:
            - AuthenticationFilter

        # Category Service - Specific method and paths with AuthenticationFilter
        - id: category-service-post-put
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/category/**
            - Method=POST,PUT
          filters:
            - AuthenticationFilter

        - id: category-service-delete
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/category/{categoryId}
            - Method=DELETE
          filters:
            - AuthenticationFilter

        # Product Service - Other methods without AuthenticationFilter
        - id: product-service-other
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/products/**
          filters: []

        # Category Service - Other methods without AuthenticationFilter
        - id: category-service-other
          uri: http://localhost:8070
          predicates:
            - Path=/api/v1/category/**
          filters: []

        # Order Service
        - id: order-service
          uri: http://localhost:7080 # Backend order service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - AuthenticationFilter

        # Payment Service
        - id: payment-service
          uri: http://localhost:8010 # Backend payment service
          predicates:
            - Path=/api/v1/payment/**
          filters:
            - AuthenticationFilter

# Eureka client configuration
eureka:
  client:
    register-with-eureka: false # Set to true if using Eureka for service discovery
    fetch-registry: false       # Fetch registry only if needed
